/*
Given an array arr of integers. Find whether three numbers are such that the sum of two elements equals the third element.

Example:
Input: arr[] = [1, 2, 3, 4, 5]
Output: true
Explanation: The pair (1, 2) sums to 3.

Input: arr[] = [5, 3, 4]
Output: false
Explanation: No triplets satisfy the condition.

Expected Time Complexity: O(n2)
Expected Auxilary Space: O(1)

Constraints:
1 <= arr.size() <= 10^3
0 <= arr[i] <= 10^5
*/
class Solution {
  public:
    bool findTriplet(vector<int>& arr) {
        
        sort(arr.begin(), arr.end());
        for(int i = arr.size()-1; i>=2;i--)
        {
            int j = 0, k=i-1;
            while(j<k)
            {
                int currentSum = arr[j]+arr[k];
                if(currentSum == arr[i])
                return true;
                else if(currentSum > arr[i])
                k--;
                else if (currentSum < arr[i])
                j++;
            }
        }
        return false;
    }
};
