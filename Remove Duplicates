/*
Given a string str without spaces, the task is to remove all duplicate characters from it, keeping only the first occurrence.

Note: The original order of characters must be kept the same. 

Examples :
Input: str = "zvvo"
Output: "zvo"
Explanation: Only keep the first occurrence

Input: str = "gfg"
Output: "gf"
Explanation: Only keep the first occurrence

Expected Time Complexity: O(n)
Expected Auxiliary Space: O(1)

Constraints:
1 <= |str| <= 10^5
str contains lowercase English alphabets.

*/
class Solution {
  public:

    string removeDups(string s) {
        vector<int>occurence(26,0);
        string ans="";
        int n=s.size();
        for(int i=0;i<n;i++){
            int index=s[i]-'a';
            if(occurence[index]==0){
                occurence[index]+=1;
                ans+=s[i];
            }else{
               continue;
            }
        }
        
        return ans;
    }
};
