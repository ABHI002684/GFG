/*
Given two binary strings s1 and s2 consisting of only 0s and 1s. Find the resultant string after adding the two Binary Strings.
Note: The input strings may contain leading zeros but the output string should not have any leading zeros.

Input: s1 = "1101", s2 = "111"
Output: 10100
Explanation:
 1101
+ 111
10100

Input: s1 = "00100", s2 = "010"
Output: 110
Explanation: 
  100
+  10
  110

Constraints:
1 â‰¤s1.size(), s2.size()â‰¤ 10^6
*/

class Solution {
  public:
    string addBinary(string& s1, string& s2) {
        int n=s1.size(),m=s2.size();
        int i=n-1,j=m-1;
        int carry=0;
        string ans="";
        while (i >= 0 || j >= 0 || carry) {
        int bit1 = (i >= 0) ? s1[i--] - '0' : 0;
        int bit2 = (j >= 0) ? s2[j--] - '0' : 0;
        int sum = bit1 + bit2 + carry;

        ans += (sum % 2) + '0';  
        carry = sum / 2;           
    }

    reverse(ans.begin(), ans.end()); 

      int count=0;
      
      while(ans[count]=='0'){
    
        count++;
    }
    
       ans.erase(0,count++);
       return ans;
    }
};
