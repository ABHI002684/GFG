/*
Given a grid of size n*m (n is the number of rows and m is the number of columns in the grid) consisting of '0's (Water) and '1's(Land). Find the number of islands.

Note: An island is either surrounded by water or the boundary of a grid and is formed by connecting adjacent lands horizontally or vertically or diagonally i.e., in all 8 directions.

Examples:
Input: grid = [[0,1],[1,0],[1,1],[1,0]]
Output: 1
Explanation:
The grid is-
All lands are connected.

Input: grid = [[0,1,1,1,0,0,0],[0,0,1,1,0,1,0]]
Output: 2
Expanation:
The grid is-
There are two islands :- one is colored in "blue" and other in "red".

Expected Time Complexity: O(n*m)
Expected Space Complexity: O(n*m)

Constraints:
1 ≤ n, m ≤ 500
grid[i][j] = {'0', '1'}
*/
class Solution {
public:
    bool areSentencesSimilar(string s1, string s2) {
        s1.insert(s1.begin(),' '),s2.insert(s2.begin(),' '),s1.push_back(' '),s2.push_back(' ');
        int n = s1.size() , m = s2.size(),prefix_match = 0,suffix_match = 0,x = min(n,m),temp = x;
        for(int i=0;i<x;i++){
            if(s1[i] != s2[i])break;
            if(s1[i] == ' ' && s2[i] == ' ') prefix_match = i;
        }
        int i=n-1,j=m-1;
        while(temp--){
            if(s1[i] != s2[j])break;
            if(s1[i] == ' ' && s2[j] == ' ') suffix_match = x-1-temp;
            i--,j--;
        }
        return (prefix_match + suffix_match + 1 >= x);
    }
};
