/*
Given a single linked list, calculate the sum of the last n nodes.
Note: It is guaranteed that n <= number of nodes.

Examples:
Input: Linked List: 5->9->6->3->4->10, n = 3
Output: 17
Explanation: The sum of the last three nodes in the linked list is 3 + 4 + 10 = 17.

Input: Linked List: 1->2, n = 2
Output: 3
Explanation: The sum of the last two nodes in the linked list is 2 + 1 = 3.

Constraints:
1 <= number of nodes, n <= 10^5
1 <= node->data <= 10^3
*/
class Solution {
  public:
    /*Structure of the node of the linled list is as

    struct Node {
        int data;
        struct Node* next;

        Node(int x){
            data = x;
            next = NULL;
        }
    };
    */
    // your task is to complete this function
    // function should return sum of last n nodes
    
    void reverse(struct Node** head){
        struct Node* curr=*head;
        struct Node* prev=NULL;
        struct Node* nextNode;
        
        while(curr!=NULL){
            nextNode=curr->next;
            curr->next=prev;
            prev=curr;
            curr=nextNode;
        }
        *head=prev;
    }
    int sumOfLastN_Nodes(struct Node* head, int n) {
        
        reverse(&head);
        int sum=0;
        struct Node* curr=head;
        while(n-- ){
            sum+=curr->data;
            curr=curr->next;
        }
        return sum;
    }
};
