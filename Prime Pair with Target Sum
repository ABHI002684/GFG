/*
Given a number n, find out if n can be expressed as a+b, where both a and b are prime numbers. If such a pair exists, return the values of a and b, otherwise return [-1,-1] as an array of size 2.
Note: If [a, b] is one solution with a <= b, and [c, d] is another solution with c <= d, and a < c then  [a, b] is considered as our answer.

Examples

Input: n = 10
Output: 3 7
Explanation: There are two possiblities 3, 7 & 5, 5 are both prime & their sum is 10, but we'll pick 3, 7 as 3 < 5.

Input: n = 3
Output: -1 -1
Explanation: There are no solutions to the number 3.

Expected Time Complexity: O(n*loglog(n))
Expected Auxiliary Space: O(n)

Constraints:
2 <= n <= 10^6

*/

class Solution {
  public:
  vector<bool> primeSieve(int n)
  {
       vector<bool>isPrime(n+1,true);
        
        isPrime[0]=isPrime[1]=false;
        for(int i=2;i*i<=n;i++)
        {
            if(!isPrime[i]) continue;
            
            for(int j=i*i;j<=n;j+=i)
            {
                isPrime[j]=false;
            }
        }
        
        return isPrime;
  }
    vector<int> getPrimes(int n) {
        vector<bool> prime=primeSieve(n);
        int x=-1,y=-1;
        
        for(int i=0;i<=n;i++)
        {
            if(prime[i] && prime[n-i]){
                x=i,y=n-i;
                break;
            }
                    
        }
        
        return {x,y};
    }
};
