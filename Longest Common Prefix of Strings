/*
Given an array of strings arr. Return the longest common prefix among all strings present in the array. If there's no prefix common in all the strings, return "-1".

Examples :
Input: arr[] = ["geeksforgeeks", "geeks", "geek", "geezer"]
Output: gee
Explanation: "gee" is the longest common prefix in all the given strings.

Input: arr[] = ["hello", "world"]
Output: -1
Explanation: There's no common prefix in the given strings.

Expected Time Complexity: O(n*min(|arri|))
Expected Space Complexity: O(min(|arri|))

Constraints:
1 ≤ |arr| ≤ 10^3
1 ≤ |arr[i]| ≤ 10^3
*/
class Solution {
  public:

    string longestCommonPrefix(vector<string> arr) {
        string ans="";
        sort(arr.begin(),arr.end());
        int n=arr.size();
        string first=arr[0];
        string last=arr[n-1];
        
        for(int i=0;i<min(first.size(),last.size());i++){
            if(first[i]!=last[i]){
                break;
            }
            ans+=first[i];
        }
        if(ans.size()==0) return "-1";
        return ans;
    }
};
